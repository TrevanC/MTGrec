services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: mtg_recommender
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/mtg_recommender
      DEBUG: "true"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    develop:
      watch:
        # Sync source changes instantly (no rebuild needed)
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - backend/__pycache__/**
            - backend/app/**/__pycache__/**
        # Rebuild only when dependencies change
        - action: rebuild
          path: ./backend/requirements.txt

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api/v1
      API_URL: http://backend:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev
    develop:
      watch:
        # Sync source changes instantly (no rebuild needed)
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - frontend/node_modules/**
            - frontend/.next/**
        # Rebuild only when dependencies change
        - action: rebuild
          path: ./frontend/package.json
        - action: rebuild
          path: ./frontend/package-lock.json

volumes:
  postgres_data: